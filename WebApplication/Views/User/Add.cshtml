
@model Data.Models.DTOs.CreateThesisModel


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<style>
    .dropdown {
        position: relative;
        display: inline-block;
    }

    .select-dropdown {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        padding: 12px 16px;
        z-index: 1;
    }

    .dropdown:hover .select-dropdown {
        display: block;
    }
</style>


<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
Add Thesis
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <form method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "btn btn-danger" })
                <div class="form-group">
                    @Html.LabelFor(x => x.PAGES)
                    <input type="text" class="form-control" name="PAGES" />
                    @Html.ValidationMessageFor(x => x.PAGES, "", new { @style = "color:red" })
                </div>
                
                <br />
                <div class="form-group">
                    @Html.LabelFor(x => x.TITLE)
                    <input type="text" class="form-control" name="TITLE" />
                    @Html.ValidationMessageFor(x => x.TITLE, "", new { @style = "color:red" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(x => x.THESISYEAR)
                    <input type="number" class="form-control" name="THESISYEAR" />
                    @Html.ValidationMessageFor(x => x.THESISYEAR, "", new { @style = "color:red" })
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(x => x.LANGUAGE)
                    @Html.DropDownListFor(x => x.LANGUAGE,
                             Enum.GetValues(typeof(Languages)).Cast<Languages>().Select(
                             value => new SelectListItem
                    {
                        Text = value.ToString(),
                        Selected = value.ToString() == (Model.LANGUAGE ?? "").ToString()
                    }), "Select Language", new { @class = "form-control" })
                </div>

                <br />

                <div class="form-group">
                    @Html.LabelFor(x => x.TYPE)
                    @Html.DropDownListFor(x => x.TYPE,
                             Enum.GetValues(typeof(Types)).Cast<Types>().Select(
                             value => new SelectListItem
                    {
                        Text = value.ToString(),
                        Selected = value.ToString() == Model.TYPE
                    }), "Select Type", new { @class = "form-control" })
                </div>
                <br />

                <div class="form-group">
                    <label>University</label>
                    @Html.DropDownListFor(x => x.UNIVERSITYID, (List<SelectListItem>)ViewBag.Universities, "Select University", new { @class = "form-control" })
                </div>
                <br />

                <div class="form-group">
                    <label>Institute</label>
                    @Html.DropDownListFor(x => x.INSTITUTEID, (List<SelectListItem>)ViewBag.Institutes, "Select Institute", new { @class = "form-control" })
                </div>
                <br />
                
                <div class="form-group">
                    <label>Institute</label>
                    @Html.DropDownListFor(x => x.SUPERVISORID, (List<SelectListItem>)ViewBag.Supervisors, "Select Supervisor", new { @class = "form-control" })
                </div>
                <br />


                <div class="form-group">
                    @Html.LabelFor(x => x.ABSTRACT)
                    <textarea class="form-control" name="ABSTRACT" rows="4"></textarea>
                    @Html.ValidationMessageFor(x => x.ABSTRACT, "", new { @style = "color:red" })
                </div>
                <br />


                <button class="btn btn-success" type="submit">Create</button>
            </form>
        </div>
    </div>
</div>